name: build-window

on:
  push:
    branches:
      - main
      - add-windows
    tags:
      - '*'
  
jobs:
  build-windows:
    runs-on: windows-2019
    strategy:
      matrix:
        python-version: ['3.8'] 
        cuda-version: ['11.3']
    steps:
      - uses: actions/checkout@master
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            needbuild:
              - '.github/workflows/**'
              - 'setup.py'
              - 'spconv/csrc/**'
              - 'spconv/algo.py'
              - 'spconv/core.py'
              - 'pyproject.toml'
      - name: Install Boost
        env:
          CUDA_VERSION: ${{ matrix.cuda-version }}
          PYTHON_VERSION: ${{ matrix.python-version }}
          cuda: ${{ matrix.cuda-version }}
          BOOST_VERSION: boost_1_77_0
        if: |
          (
            (github.event_name == 'push' && (startsWith(github.ref, 'refs/tags')) ) || 
            (
              (steps.changes.outputs.needbuild == 'true') && 
              (env.PYTHON_VERSION == '3.10')
            )
          )
        shell: powershell
        run: |
          $ProgressPreference = 'SilentlyContinue'
          Invoke-WebRequest -Uri "https://boostorg.jfrog.io/artifactory/main/release/1.77.0/source/boost_1_77_0.zip" -UseBasicParsing -OutFile $HOME/boost.zip
          Expand-Archive $HOME/boost.zip -DestinationPath $HOME/boost

      - name: Install CUDA
        env:
          CUDA_VERSION: ${{ matrix.cuda-version }}
          PYTHON_VERSION: ${{ matrix.python-version }}
          cuda: ${{ matrix.cuda-version }}
        if: |
          (env.CUDA_VERSION != '') && (
            (github.event_name == 'push' && (startsWith(github.ref, 'refs/tags')) ) || 
            (
              (steps.changes.outputs.needbuild == 'true') && 
              (env.PYTHON_VERSION == '3.10')
            )
          )
        shell: powershell
        run: |
          .\tools\install_windows_cuda.ps1
        
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Install pep build
        run: |
          python -m pip install build --user
          python -m pip install --upgrade pip twine wheel
          python -m pip install pytest setuptools

      - name: Build a windows binary wheel
        env:
          CUDA_VERSION: ${{ matrix.cuda-version }}
          PYTHON_VERSION: ${{ matrix.python-version }}
          BOOST_VERSION: boost_1_77_0
          CUMM_CUDA_VERSION: ${{ matrix.cuda-version }}
        if: |
          (env.CUDA_VERSION != '') && (
            (github.event_name == 'push' && (startsWith(github.ref, 'refs/tags')) ) || 
            (
              (steps.changes.outputs.needbuild == 'true') && 
              (env.PYTHON_VERSION == '3.10')
            )
          )
        run: |
          $Env:CUMM_CUDA_ARCH_LIST = "all"
          $Env:SPCONV_DISABLE_JIT = "1"
          pip install pccm pybind11
          # download boost header only
          $Env:BOOST_ROOT = "$HOME/boost/boost_1_77_0"
          # ls "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v${{ matrix.cuda-version }}\include\thrust"
          python -m build --wheel --outdir dist/ .
        shell: powershell

      - name: install windows binary wheel
        run: | 
            pip install dist/*.whl
            pip list | grep spconv
            python -c "import spconv"
            python -c "import spconv.pytorch"